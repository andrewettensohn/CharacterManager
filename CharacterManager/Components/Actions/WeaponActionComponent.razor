<MudGrid>
    <MudItem xs="12">
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Class="mb-3" Dense="true" Bordered="true">
            <thead>
                <tr>
                    <th>Weapon</th>
                    <th>Hit</th>
                    <th>Damage</th>
                    <th>ED</th>
                    <th>Traits</th>
                    <th>Salvo</th>
                </tr>
            </thead>
            <tbody>
                @if (ViewModel.Character.Weapons != null)
                {
                    @foreach (Weapon weapon in ViewModel.Character.Weapons.Where(x => x.IsEquipped).ToList())
                    {
                        <tr>
                            <td>
                                @weapon.Name
                            </td>
                            @if (weapon.IsMelee)
                            {
                                int hit = ViewModel.Character.Skills.Weapon + ViewModel.Character.Attributes.Strength;
                                int damage = weapon.Damage + ViewModel.Character.Attributes.Strength;

                                <td>
                                    @hit
                                </td>
                                <td>
                                    @damage
                                </td>
                                <td>
                                    @weapon.ED
                                </td>
                                <td>
                                    @weapon.Traits
                                </td>
                                <td>
                                    @weapon.Salvo
                                </td>

                            }
                            else
                            {
                                int hit = ViewModel.Character.Skills.Ballistic + ViewModel.Character.Attributes.Initiative;

                                <td>
                                    @hit
                                </td>
                                <td>
                                    @weapon.Damage
                                </td>
                                <td>
                                    @weapon.ED
                                </td>
                                <td>
                                    @weapon.Traits
                                </td>
                                <td>
                                    @weapon.Salvo
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </MudSimpleTable>
    </MudItem>
    <MudItem xs="6">
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Class="mb-3" Bordered="true" Dense="true">
            <thead>
                <tr>
                    <th>Ranged Options</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (KeyValuePair<string, string> reference in UserMessages.QuickReference.Ranged)
                {
                    <tr>
                        <td>@reference.Key</td>
                        <td>@reference.Value</td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudItem>
    <MudItem xs="6">
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Class="mb-3" Bordered="true" Dense="true">
            <thead>
                <tr>
                    <th>Melee Options</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (KeyValuePair<string, string> reference in UserMessages.QuickReference.Melee)
                {
                    <tr>
                        <td>@reference.Key</td>
                        <td>@reference.Value</td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter]
    public CharacterViewModel ViewModel { get; set; }
}
