
<label for="archetypeSelect">Select an Archetype</label>
<select name="archetypeSelect" class="form-control" @onchange="OnArchetypeSelected">
    <option>Select an archetype</option>
    @foreach(Archetype archetype in Archetypes)
    {
        <option>@archetype.Name</option>
    }
</select>

<hr />

<label for="Name">Or Create a New One</label>
<input name="Name" type="text" class="form-control mb-3" placeholder="Archetype Name" @bind="Character.Archetype.Name" />

<label for="Tier">Tier</label>
<input name="Tier" type="number" class="form-control mb-3" placeholder="Tier" @bind="Character.Archetype.Tier" />

<label for="XPCost">XP Cost</label>
<input name="XPCost" type="number" class="form-control mb-3" placeholder="XP Cost" @bind="Character.Archetype.XPCost" />

<label for="Keywords">Keywords</label>
<input name="Keywords" type="text" class="form-control mb-3" placeholder="Keywords" @bind="Character.Archetype.Keywords" />

<label for="AttributeBonus">Attribute Bonus</label>
<input name="AttributeBonus" type="number" class="form-control mb-3" placeholder="Attribute Bonus" @bind="Character.Archetype.AttributeBonus" />

<label for="SkillBonus">Skill Bonus</label>
<input name="SkillBonus" type="number" class="form-control mb-3" placeholder="Skill Bonus" @bind="Character.Archetype.SkillBonus" />

<label for="Ability">Archetype Ability</label>
<input name="Ability" type="text" class="form-control mb-3" placeholder="Archetype Ability" @bind="Character.Archetype.ArchetypeAbility" />

<label for="Influence">Influence</label>
<input name="Influence" type="number" class="form-control mb-3" placeholder="Influence" @bind="Character.Archetype.Influence" />

<button class="btn btn-secondary" @onclick="SubmitArchetype">Update</button>

@code {
    [Parameter]
    public Character Character { get; set; }

    [Parameter]
    public List<Archetype> Archetypes { get; set; }

    [Parameter]
    public EventCallback SubmitArchetype { get; set; }

    private async Task OnArchetypeSelected(ChangeEventArgs args)
    {
        Archetype selectedArchetype = Archetypes.FirstOrDefault(x => x.Name == args.Value.ToString());
        Character.Archetype = selectedArchetype;
        await SubmitArchetype.InvokeAsync();
    }

    protected override void OnInitialized()
    {
        if (Character.Archetype is null)
        {
            Character.Archetype = new Archetype();
        }

        base.OnInitialized();
    }
}
