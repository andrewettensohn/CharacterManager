<MudFab @onclick="ToggleAllListVisible" Icon="@Icons.Material.Filled.ViewInAr" Size="Size.Medium" IconSize="Size.Medium" Label="Manage" />
<MudList Clickable="true" Class="@CharacterListCss">
    @if (ViewModel.Character.Armor != null)
    {
        Armor armor = ViewModel.Character.Armor;

        if (!string.IsNullOrWhiteSpace(armor.Name))
        {
            if (ViewModel.Character.Armor.IsEquipped)
            {
                <MudListItem @onclick="async () => await ViewModel.UpdateArmor(armor, false)">
                    <MudChip Color="Color.Info">Equipped</MudChip>
                    <MudText Typo="Typo.h6">@armor.Name</MudText>
                    <MudText>Rating: @armor.AR</MudText>
                    <MudText>Traits: @armor.Traits</MudText>
                    <MudDivider />
                    <MudText>@armor.Description</MudText>
                </MudListItem>
            }
            else
            {
                <MudListItem @onclick="async () => await ViewModel.UpdateArmor(armor, true)">
                    <MudChip Color="Color.Default">Not Equipped</MudChip>
                    <MudText Typo="Typo.h6">@armor.Name</MudText>
                    <MudText>Rating: @armor.AR</MudText>
                    <MudText>Traits: @armor.Traits</MudText>
                    <MudDivider />
                    <MudText>@armor.Description</MudText>
                </MudListItem>
            }
        }
        else
        {
            <p>No Armor in Inventory</p>
        }
    }
</MudList>

<MudList Clickable="true" Class="@AllListCss">
    @foreach (Armor armor in ViewModel.ArmorList)
    {
        @if (ViewModel.Character.Armor != null && ViewModel.Character.Armor.Name == armor.Name)
        {
            <MudListItem @onclick="async () => await ViewModel.UpdateArmor(armor, false)">
                <MudChip Color="Color.Success">In Inventory</MudChip>
                <MudText Typo="Typo.h6">@armor.Name</MudText>
                <MudText>Rating: @armor.AR</MudText>
                <MudText>Traits: @armor.Traits</MudText>
                <MudDivider />
                <MudText>@armor.Description</MudText>
            </MudListItem>
        }
        else
        {
            <MudListItem @onclick="async () => await ViewModel.UpdateArmor(armor, false)">
                <MudChip Color="Color.Error">Not In Inventory</MudChip>
                <MudText Typo="Typo.h6">@armor.Name</MudText>
                <MudText>Rating: @armor.AR</MudText>
                <MudText>Traits: @armor.Traits</MudText>
                <MudDivider />
                <MudText>@armor.Description</MudText>
            </MudListItem>
        }
    }
</MudList>

@code {
    [CascadingParameter]
    public CharacterViewModel ViewModel { get; set; }

    private bool IsAllListVisible = false;
    private string AllListCss => IsAllListVisible ? Constants.NoCssClass : Constants.NoDisplayCssClass;
    private string CharacterListCss => !IsAllListVisible ? Constants.NoCssClass : Constants.NoDisplayCssClass;
    private void ToggleAllListVisible() => IsAllListVisible = !IsAllListVisible;
}