@page "/"
@inject CharacterService CharacterService
@inject NavigationManager NavManager

<div class="row justify-content-center">
    <button class="btn btn-lg btn-primary" @onclick="NewCharacter">New Character</button>
</div>
<div class="row justify-content-center text-center">
    <div class="row p-5">
        @if (!Busy)
        {
            @foreach (Character character in Characters)
            {
                <CharacterImage Character="character" IncludeLinkToCharacterPage="true" />
            }
        }
        else
        {
            <div class="spinner-border p-5" role="status"></div>
        }
    </div>
</div>

    @code {

        private List<Character> Characters = new List<Character>();

        private bool Busy { get; set; }

        protected override async Task OnInitializedAsync()
        {
            Busy = true;

            List<Character> characters = await CharacterService.ListCharacters();

            foreach(Character character in characters)
            {
                Characters.Add(await CharacterService.GetCharacter(character.CharacterId));
            }

            Busy = false;

            await base.OnInitializedAsync();
        }

        private async Task NewCharacter()
        {
            Character Character = await CharacterService.NewCharacter();
            NavManager.NavigateTo($"characterPage/{Character.CharacterId}");
        }
    }
