@page "/characterPage"
@page "/characterPage/{Id:int}"

@if (Character is null)
{
    <p>No Character found.</p>
}
else
{
    <div class="row">
        <div class="col-5">
            <h3 @onclick="ToggleCharacterNameInputDisplay" class="@CharacterNameHeaderCss">@Character.Name</h3>
            <input type="text" class="form-control @CharacterNameInputCss" @bind="Character.Name" @onfocusout="UpdateCharacterName" />
        </div>
        <div class="col">
            <p @onclick ="ToggleTierDisplay" class="@TierHeaderCss">Tier @Character.Tier</p>
            <select class="form-control @TierInputCss" @onchange="async (eventArgs) => await UpdateTier(eventArgs, Character)">
                <option>Select a Tier</option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
            </select>
        </div>
        <div class="col">
            <p class="@XPHeaderCss" @onclick="ToggleXPInput">@Character.XP XP</p>
            <input type="number" class="form-control @XPInputCss" value="@Character.XP" @onchange="async (eventArgs) => await UpdateXP(eventArgs)" />
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <AttributesComponent Attributes="Character.Attributes"
                                 ValueChanged="async () => await _characterService.UpdateCharacter(Character)"
                                 Character="Character" />
        </div>
        <div class="col-5">
            <SkillsComponent Skills="Character.Skills"
                             ValueChanged="async () => await _characterService.UpdateCharacter(Character)"
                             Character="Character" />
        </div>
    </div>
}
